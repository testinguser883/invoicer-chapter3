version: 2
jobs:
  build:
    # Variable expansion in working_directory not supported at this time
    # You will need to modify the code below to reflect your github account/repo setup
    working_directory: /go/src/github.com/testinguser883/invoicer-chapter3
    docker:
      - image: circleci/golang:1.10.1
    environment:
      GO15VENDOREXPERIMENT: 1
    branches:
      only:
        - master
    steps:
      - checkout
      - setup_remote_docker

      - run: echo 'export GOPATH_HEAD="$(echo ${GOPATH}|cut -d ':' -f 1)"' >> $BASH_ENV
      - run: echo 'export GOPATH_BASE="${GOPATH_HEAD}/src/github.com/${CIRCLE_PROJECT_USERNAME}"' >> $BASH_ENV
      - run: echo 'export DOCKER_REPO="$(if [ ${CIRCLE_PROJECT_USERNAME} == 'testinguser883' ]; then echo testinguser883; else echo $DOCKER_USER; fi)"' >> $BASH_ENV
      - run: mkdir -p "${GOPATH_BASE}"
      - run: mkdir -p "${GOPATH_HEAD}/bin"
      - run: go get github.com/govend/govend
      - run: env
      # - run: echo ${GOPATH_HEAD}
      - run: go get -v -d ./...
      # - run: go test -v ./...

      - run:
          name: Build application container
          command: |
            # go install --ldflags '-extldflags "-static"' github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
            [ ! -e bin ] && mkdir bin;
            go build --ldflags '-extldflags "-static"' -o bin/invoicer .;
            # cp "${GOPATH_HEAD}/bin/${CIRCLE_PROJECT_REPONAME}" bin/invoicer;
            docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
            docker images;
            echo "---------------------------";
            docker ps;
            echo "---------------------------";
            # ls -R;

      - run:
          name: Run application in background
          command: |
            docker run -p 8080:8080 ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
          background: true
      
      - run:
          name: Fetching ip
          command: |
            sleep 5;
            echo "###########################";
            docker ps;
            ip a;
            docker inspect --format '{{ .NetworkSettings.IPAddress }}' `docker ps -q`;
            _ip=`docker inspect --format '{{ .NetworkSettings.IPAddress }}' \`docker ps -q\``;
            curl -V;
            echo $_ip;
            echo "*********** LOCAL MACHINE **************";
            netstat -antup;
            echo "************ INSIDE DOCKER ***********";
            docker exec `docker ps -q` netstat -antup;
            echo "*****************************************"
            # docker exec -it `docker ps -q` ls;
            ip41=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
            ip42=$(ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
            curl http://$ip41:8080/;
            echo "++++++++++++++++++++";
            curl http://$ip42:8080/;
            echo "--------------------"";
            curl http://localhost:8080/;
            # curl http://$_ip:8080/;

      - run:
          name: ZAP baseline test of application
          # Only fail on error code 1, which indicates at least one FAIL was found.
          # error codes 2 & 3 indicate WARN or other, and should not break the run
          command: |
            (
            docker pull owasp/zap2docker-weekly && \
            docker run -t owasp/zap2docker-weekly zap-baseline.py \
                -u https://raw.githubusercontent.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/master/zap-baseline.conf \
                -t http://localhost:8080/ || \
            if [ $? -ne 1 ]; then exit 0; else exit 1; fi;
            )

      - run:
          name: Test dependencies are up to date
          command: 'GOPATH="${GOPATH_HEAD}"; ( cd ${GOPATH_BASE}/${CIRCLE_PROJECT_REPONAME} && govend -u --prune && git diff --quiet )'

      - deploy:
          # Push application container to dockerhub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                docker login -u ${DOCKER_USER} -p ${DOCKER_PASS};
                echo ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG};
                go install --ldflags '-extldflags "-static"' github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
                mkdir bin;
                cp "$GOPATH_HEAD/bin/${CIRCLE_PROJECT_REPONAME}" bin/invoicer;
                docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
                docker images --no-trunc | awk '/^app/ {print $3}' | sudo tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt;
                docker push ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
            fi
            
